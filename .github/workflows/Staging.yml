name: Staging

on:
  pull_request:
    branches: [ master ]

jobs:
  staging:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2    
    - name: Build Staging API Image
      run: |
        docker login docker.pkg.github.com --username mikkokotila --password ${{ secrets.MIKKOKOTILA_TOKEN }}
        docker build -t docker.pkg.github.com/lotus-king-research/padma-frontend/frontend:staging -f ./Dockerfile_Staging .
        docker push docker.pkg.github.com/lotus-king-research/padma-frontend/frontend:staging
    - name: Deploy to Staging
      uses: appleboy/ssh-action@master
      with:
        host: 3.64.158.251
        username: ubuntu
        key: ${{ secrets.PADMA }}
        command_timeout: 5m
        script: |
          sudo docker login docker.pkg.github.com --username mikkokotila --password ${{ secrets.MIKKOKOTILA_TOKEN }}
          sudo docker pull docker.pkg.github.com/lotus-king-research/padma-frontend/frontend:staging
          
          RUNNING_IMAGE=$(sudo docker ps | grep docker-entrypoint | cut -d ' ' -f1)
          if [ ${#RUNNING_IMAGE} -gt 1 ]
          then
            sudo docker stop $RUNNING_IMAGE
          fi

          NEW_IMAGE_ID=$(sudo docker images | grep frontend | grep staging | head -1 | tr -s ' ' | cut -d ' ' -f3)
          sudo docker run --memory=200m --restart unless-stopped -p 8080:8080 --detach $NEW_IMAGE_ID
    - name: Purge Cloudflare Cache
      uses: MrHakala/cloudflare-purge-action@master
      env:
        CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
        CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}